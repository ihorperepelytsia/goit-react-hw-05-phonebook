{"version":3,"sources":["components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","utils/filterContact.js","components/Alert/Alert.jsx","components/App/App.jsx","index.js"],"names":["Form","state","name","number","handleChange","target","value","setState","handleSubmit","e","props","contacts","onAddContact","updateAlertText","preventDefault","undefined","find","contact","this","onSubmit","type","onChange","Component","ContactList","onDeleteContact","TransitionGroup","component","map","id","CSSTransition","key","timeout","classNames","unmountOnExit","className","onClick","ContactFilter","onChangeFilter","placeholder","propType","PropTypes","string","isRequired","func","filterContact","filter","toLowerCase","includes","Alert","text","App","isLoadingPage","alertText","alertLoading","bool","changeFilter","addContact","contactToAdd","v4","prevState","deleteContact","item","getLocalStorageContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","setTimeout","filteredContacts","in","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b239b3c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './form.scss';\r\n\r\nexport default class Form extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      }).isRequired,\r\n    ).isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    const { contacts, onAddContact, updateAlertText } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    if (name !== '' && number !== '') {\r\n      if (contacts.find(contact => contact.name === name) === undefined) {\r\n        onAddContact({ ...this.state });\r\n        this.setState({ name: '', number: '' });\r\n      } else {\r\n        updateAlertText(`${number}  is alredy in contacts`, true);\r\n      }\r\n    } else {\r\n      updateAlertText(`No data entered, try again`, true);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"number\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add Contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport './contactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"list\" unmountOnExit>\r\n        <li className=\"user\">\r\n          <p className=\"user-name\">{name}</p>\r\n          <p className=\"user-number\">{number}</p>\r\n          <button name={id} onClick={onDeleteContact}>\r\n            X\r\n          </button>\r\n        </li>\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './filter.scss';\r\n\r\nconst ContactFilter = ({ value, onChangeFilter }) => (\r\n  <>\r\n    <div className=\"contact-filter\">\r\n      <label>\r\n        Find Contacts by Name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n          placeholder=\"Type to filter contact...\"\r\n        />\r\n      </label>\r\n    </div>\r\n  </>\r\n);\r\n\r\nContactFilter.propType = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nexport default ContactFilter;\r\n","const filterContact = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nexport default filterContact;\r\n","import React from 'react';\r\nimport './alert.scss';\r\n\r\nconst Alert = ({ text }) => (\r\n  <div className=\"alert\">\r\n    <p>{text}</p>\r\n  </div>\r\n);\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './animationTransition.scss';\r\n\r\nimport Form from '../Form/Form';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport ContactFilter from '../ContactFilter/ContactFilter';\r\nimport filterContact from '../../utils/filterContact';\r\nimport { v4 } from 'uuid';\r\nimport Alert from '../Alert/Alert';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n    isLoadingPage: false,\r\n    alertText: '',\r\n    alertLoading: false,\r\n  };\r\n\r\n  updateAlertText = (value, bool) => {\r\n    this.setState({ alertText: value, alertLoading: bool });\r\n  };\r\n\r\n  changeFilter = e => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  addContact = contact => {\r\n    const contactToAdd = {\r\n      id: v4(),\r\n      ...contact,\r\n    };\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contactToAdd],\r\n    }));\r\n  };\r\n\r\n  deleteContact = ({ target: { name } }) => {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts.filter(item => item.id !== name)],\r\n    }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoadingPage: true,\r\n    });\r\n\r\n    const getLocalStorageContacts = localStorage.getItem('Contacts');\r\n    if (getLocalStorageContacts) {\r\n      this.setState({ contacts: JSON.parse(getLocalStorageContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('Contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n\r\n    if (prevState.alertLoading !== this.state.alertLoading) {\r\n      setTimeout(() => this.setState({ alertLoading: false }), 2500);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      contacts,\r\n      filter,\r\n      isLoadingPage,\r\n      alertText,\r\n      alertLoading,\r\n    } = this.state;\r\n    const filteredContacts = filterContact(contacts, filter);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"box\">\r\n          <CSSTransition\r\n            in={isLoadingPage}\r\n            timeout={1250}\r\n            classNames=\"headline\"\r\n            unmountOnExit\r\n          >\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n\r\n          <CSSTransition\r\n            in={alertLoading}\r\n            timeout={1250}\r\n            classNames=\"alertAnimation\"\r\n            unmountOnExit\r\n          >\r\n            <Alert text={alertText} />\r\n          </CSSTransition>\r\n        </div>\r\n        <Form\r\n          onAddContact={this.addContact}\r\n          contacts={contacts}\r\n          updateAlertText={this.updateAlertText}\r\n        />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <CSSTransition\r\n          in={contacts.length >= 2}\r\n          timeout={250}\r\n          classNames=\"filter\"\r\n          unmountOnExit\r\n        >\r\n          <ContactFilter value={filter} onChangeFilter={this.changeFilter} />\r\n        </CSSTransition>\r\n\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}